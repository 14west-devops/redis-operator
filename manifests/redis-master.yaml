---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: opstree-redis-master
  labels:
    app: redis
    chart: redis-10.2.1
    release: opstree-redis
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: redis
      release: opstree-redis
      role: master
  serviceName: opstree-redis-headless
  template:
    metadata:
      labels:
        app: redis
        chart: redis-10.2.1
        release: opstree-redis
        role: master
      annotations:
        checksum/health: dc9edfd2b73d7402ed8e8f61d6d6df90292735a8aed921ef3c375115051386f4
        checksum/configmap: 931d2b4efd1560fff96dc5e9e862e24706a21595e1134502e7331c20b2eb5c0e
        checksum/secret: 32ca3b43da685cdb050f9ad7b1003eaeca497fcfd5dcae0cdc44e1cbacd2796c
        prometheus.io/port: "9121"
        prometheus.io/scrape: "true"
    spec:      
      securityContext:
        fsGroup: 1001
        sysctls:
        - name: net.core.somaxconn
          value: "100000"
      serviceAccountName: "default"
      containers:
      - name: opstree-redis
        image: "docker.io/bitnami/redis:5.0.7-debian-9-r12"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 1001
        command:
        - /bin/bash
        - -c
        - |
          if [[ -n $REDIS_PASSWORD_FILE ]]; then
            password_aux=`cat ${REDIS_PASSWORD_FILE}`
            export REDIS_PASSWORD=$password_aux
          fi
          if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
          fi
          if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
          fi
          ARGS=("--port" "${REDIS_PORT}")
          ARGS+=("--requirepass" "${REDIS_PASSWORD}")
          ARGS+=("--masterauth" "${REDIS_PASSWORD}")
          ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
          ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
          /run.sh ${ARGS[@]}
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: opstree-redis
              key: redis-password
        - name: REDIS_PORT
          value: "6379"
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_liveness_local.sh 5
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_readiness_local.sh 5
        resources:
          null
        volumeMounts:
        - name: health
          mountPath: /health
        - name: redis-data
          mountPath: /data
          subPath: 
        - name: config
          mountPath: /opt/bitnami/redis/mounted-etc
        - name: redis-tmp-conf
          mountPath: /opt/bitnami/redis/etc/
      - name: metrics
        image: docker.io/bitnami/redis-exporter:1.3.4-debian-9-r15
        imagePullPolicy: "IfNotPresent"
        command:
        - /bin/bash
        - -c
        - |
          if [[ -f '/secrets/redis-password' ]]; then
           export REDIS_PASSWORD=$(cat /secrets/redis-password)
          fi
          redis_exporter
        env:
        - name: REDIS_ALIAS
          value: opstree-redis
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: opstree-redis
              key: redis-password
        volumeMounts:
        ports:
        - name: metrics
          containerPort: 9121
        resources:
          null
      volumes:
      - name: health
        configMap:
          name: opstree-redis-health
          defaultMode: 0755
      - name: config
        configMap:
          name: opstree-redis
      - name: redis-tmp-conf
        emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app: redis
          release: opstree-redis
          heritage: Helm
          component: master
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"        
  updateStrategy:
    type: RollingUpdate
